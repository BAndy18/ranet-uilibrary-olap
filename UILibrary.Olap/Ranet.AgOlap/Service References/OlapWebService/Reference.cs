//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace Ranet.AgOlap.OlapWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OlapWebService.OlapWebServiceSoap")]
    public interface OlapWebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetMetaData", ReplyAction="*")]
        System.IAsyncResult BeginGetMetaData(Ranet.AgOlap.OlapWebService.GetMetaDataRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.GetMetaDataResponse EndGetMetaData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetMembersData", ReplyAction="*")]
        System.IAsyncResult BeginGetMembersData(Ranet.AgOlap.OlapWebService.GetMembersDataRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.GetMembersDataResponse EndGetMembersData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetPivotData", ReplyAction="*")]
        System.IAsyncResult BeginGetPivotData(Ranet.AgOlap.OlapWebService.GetPivotDataRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.GetPivotDataResponse EndGetPivotData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PerformMemberAction", ReplyAction="*")]
        System.IAsyncResult BeginPerformMemberAction(Ranet.AgOlap.OlapWebService.PerformMemberActionRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.PerformMemberActionResponse EndPerformMemberAction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PerformStorageAction", ReplyAction="*")]
        System.IAsyncResult BeginPerformStorageAction(Ranet.AgOlap.OlapWebService.PerformStorageActionRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.PerformStorageActionResponse EndPerformStorageAction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/PerformServiceCommand", ReplyAction="*")]
        System.IAsyncResult BeginPerformServiceCommand(Ranet.AgOlap.OlapWebService.PerformServiceCommandRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse EndPerformServiceCommand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/GetToolBarInfo", ReplyAction="*")]
        System.IAsyncResult BeginGetToolBarInfo(Ranet.AgOlap.OlapWebService.GetToolBarInfoRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse EndGetToolBarInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/UpdateCube", ReplyAction="*")]
        System.IAsyncResult BeginUpdateCube(Ranet.AgOlap.OlapWebService.UpdateCubeRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.UpdateCubeResponse EndUpdateCube(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ExecuteQuery", ReplyAction="*")]
        System.IAsyncResult BeginExecuteQuery(Ranet.AgOlap.OlapWebService.ExecuteQueryRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.ExecuteQueryResponse EndExecuteQuery(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/RunExcel", ReplyAction="*")]
        System.IAsyncResult BeginRunExcel(Ranet.AgOlap.OlapWebService.RunExcelRequest request, System.AsyncCallback callback, object asyncState);
        
        Ranet.AgOlap.OlapWebService.RunExcelResponse EndRunExcel(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMetaDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMetaData", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetMetaDataRequestBody Body;
        
        public GetMetaDataRequest() {
        }
        
        public GetMetaDataRequest(Ranet.AgOlap.OlapWebService.GetMetaDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetMetaDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public GetMetaDataRequestBody() {
        }
        
        public GetMetaDataRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMetaDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMetaDataResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetMetaDataResponseBody Body;
        
        public GetMetaDataResponse() {
        }
        
        public GetMetaDataResponse(Ranet.AgOlap.OlapWebService.GetMetaDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetMetaDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetMetaDataResult;
        
        public GetMetaDataResponseBody() {
        }
        
        public GetMetaDataResponseBody(string GetMetaDataResult) {
            this.GetMetaDataResult = GetMetaDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMembersDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMembersData", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetMembersDataRequestBody Body;
        
        public GetMembersDataRequest() {
        }
        
        public GetMembersDataRequest(Ranet.AgOlap.OlapWebService.GetMembersDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetMembersDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public GetMembersDataRequestBody() {
        }
        
        public GetMembersDataRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMembersDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMembersDataResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetMembersDataResponseBody Body;
        
        public GetMembersDataResponse() {
        }
        
        public GetMembersDataResponse(Ranet.AgOlap.OlapWebService.GetMembersDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetMembersDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetMembersDataResult;
        
        public GetMembersDataResponseBody() {
        }
        
        public GetMembersDataResponseBody(string GetMembersDataResult) {
            this.GetMembersDataResult = GetMembersDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPivotDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPivotData", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetPivotDataRequestBody Body;
        
        public GetPivotDataRequest() {
        }
        
        public GetPivotDataRequest(Ranet.AgOlap.OlapWebService.GetPivotDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetPivotDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public GetPivotDataRequestBody() {
        }
        
        public GetPivotDataRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPivotDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPivotDataResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetPivotDataResponseBody Body;
        
        public GetPivotDataResponse() {
        }
        
        public GetPivotDataResponse(Ranet.AgOlap.OlapWebService.GetPivotDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetPivotDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetPivotDataResult;
        
        public GetPivotDataResponseBody() {
        }
        
        public GetPivotDataResponseBody(string GetPivotDataResult) {
            this.GetPivotDataResult = GetPivotDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformMemberActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformMemberAction", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformMemberActionRequestBody Body;
        
        public PerformMemberActionRequest() {
        }
        
        public PerformMemberActionRequest(Ranet.AgOlap.OlapWebService.PerformMemberActionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformMemberActionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public PerformMemberActionRequestBody() {
        }
        
        public PerformMemberActionRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformMemberActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformMemberActionResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformMemberActionResponseBody Body;
        
        public PerformMemberActionResponse() {
        }
        
        public PerformMemberActionResponse(Ranet.AgOlap.OlapWebService.PerformMemberActionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformMemberActionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string PerformMemberActionResult;
        
        public PerformMemberActionResponseBody() {
        }
        
        public PerformMemberActionResponseBody(string PerformMemberActionResult) {
            this.PerformMemberActionResult = PerformMemberActionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformStorageActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformStorageAction", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformStorageActionRequestBody Body;
        
        public PerformStorageActionRequest() {
        }
        
        public PerformStorageActionRequest(Ranet.AgOlap.OlapWebService.PerformStorageActionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformStorageActionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public PerformStorageActionRequestBody() {
        }
        
        public PerformStorageActionRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformStorageActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformStorageActionResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformStorageActionResponseBody Body;
        
        public PerformStorageActionResponse() {
        }
        
        public PerformStorageActionResponse(Ranet.AgOlap.OlapWebService.PerformStorageActionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformStorageActionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string PerformStorageActionResult;
        
        public PerformStorageActionResponseBody() {
        }
        
        public PerformStorageActionResponseBody(string PerformStorageActionResult) {
            this.PerformStorageActionResult = PerformStorageActionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformServiceCommandRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformServiceCommand", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformServiceCommandRequestBody Body;
        
        public PerformServiceCommandRequest() {
        }
        
        public PerformServiceCommandRequest(Ranet.AgOlap.OlapWebService.PerformServiceCommandRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformServiceCommandRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public PerformServiceCommandRequestBody() {
        }
        
        public PerformServiceCommandRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PerformServiceCommandResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PerformServiceCommandResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.PerformServiceCommandResponseBody Body;
        
        public PerformServiceCommandResponse() {
        }
        
        public PerformServiceCommandResponse(Ranet.AgOlap.OlapWebService.PerformServiceCommandResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class PerformServiceCommandResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string PerformServiceCommandResult;
        
        public PerformServiceCommandResponseBody() {
        }
        
        public PerformServiceCommandResponseBody(string PerformServiceCommandResult) {
            this.PerformServiceCommandResult = PerformServiceCommandResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetToolBarInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetToolBarInfo", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetToolBarInfoRequestBody Body;
        
        public GetToolBarInfoRequest() {
        }
        
        public GetToolBarInfoRequest(Ranet.AgOlap.OlapWebService.GetToolBarInfoRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetToolBarInfoRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public GetToolBarInfoRequestBody() {
        }
        
        public GetToolBarInfoRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetToolBarInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetToolBarInfoResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.GetToolBarInfoResponseBody Body;
        
        public GetToolBarInfoResponse() {
        }
        
        public GetToolBarInfoResponse(Ranet.AgOlap.OlapWebService.GetToolBarInfoResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetToolBarInfoResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string GetToolBarInfoResult;
        
        public GetToolBarInfoResponseBody() {
        }
        
        public GetToolBarInfoResponseBody(string GetToolBarInfoResult) {
            this.GetToolBarInfoResult = GetToolBarInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateCubeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateCube", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.UpdateCubeRequestBody Body;
        
        public UpdateCubeRequest() {
        }
        
        public UpdateCubeRequest(Ranet.AgOlap.OlapWebService.UpdateCubeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateCubeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public UpdateCubeRequestBody() {
        }
        
        public UpdateCubeRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateCubeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateCubeResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.UpdateCubeResponseBody Body;
        
        public UpdateCubeResponse() {
        }
        
        public UpdateCubeResponse(Ranet.AgOlap.OlapWebService.UpdateCubeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateCubeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string UpdateCubeResult;
        
        public UpdateCubeResponseBody() {
        }
        
        public UpdateCubeResponseBody(string UpdateCubeResult) {
            this.UpdateCubeResult = UpdateCubeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteQueryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecuteQuery", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.ExecuteQueryRequestBody Body;
        
        public ExecuteQueryRequest() {
        }
        
        public ExecuteQueryRequest(Ranet.AgOlap.OlapWebService.ExecuteQueryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExecuteQueryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public ExecuteQueryRequestBody() {
        }
        
        public ExecuteQueryRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteQueryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecuteQueryResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.ExecuteQueryResponseBody Body;
        
        public ExecuteQueryResponse() {
        }
        
        public ExecuteQueryResponse(Ranet.AgOlap.OlapWebService.ExecuteQueryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExecuteQueryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ExecuteQueryResult;
        
        public ExecuteQueryResponseBody() {
        }
        
        public ExecuteQueryResponseBody(string ExecuteQueryResult) {
            this.ExecuteQueryResult = ExecuteQueryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunExcelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RunExcel", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.RunExcelRequestBody Body;
        
        public RunExcelRequest() {
        }
        
        public RunExcelRequest(Ranet.AgOlap.OlapWebService.RunExcelRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class RunExcelRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string schema;
        
        public RunExcelRequestBody() {
        }
        
        public RunExcelRequestBody(string schema) {
            this.schema = schema;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RunExcelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="RunExcelResponse", Namespace="http://tempuri.org/", Order=0)]
        public Ranet.AgOlap.OlapWebService.RunExcelResponseBody Body;
        
        public RunExcelResponse() {
        }
        
        public RunExcelResponse(Ranet.AgOlap.OlapWebService.RunExcelResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class RunExcelResponseBody {
        
        public RunExcelResponseBody() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface OlapWebServiceSoapChannel : Ranet.AgOlap.OlapWebService.OlapWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetMembersDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMembersDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPivotDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPivotDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PerformMemberActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PerformMemberActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PerformStorageActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PerformStorageActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PerformServiceCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PerformServiceCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetToolBarInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetToolBarInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class UpdateCubeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCubeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ExecuteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class OlapWebServiceSoapClient : System.ServiceModel.ClientBase<Ranet.AgOlap.OlapWebService.OlapWebServiceSoap>, Ranet.AgOlap.OlapWebService.OlapWebServiceSoap {
        
        private BeginOperationDelegate onBeginGetMetaDataDelegate;
        
        private EndOperationDelegate onEndGetMetaDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMetaDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMembersDataDelegate;
        
        private EndOperationDelegate onEndGetMembersDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetMembersDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPivotDataDelegate;
        
        private EndOperationDelegate onEndGetPivotDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetPivotDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginPerformMemberActionDelegate;
        
        private EndOperationDelegate onEndPerformMemberActionDelegate;
        
        private System.Threading.SendOrPostCallback onPerformMemberActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginPerformStorageActionDelegate;
        
        private EndOperationDelegate onEndPerformStorageActionDelegate;
        
        private System.Threading.SendOrPostCallback onPerformStorageActionCompletedDelegate;
        
        private BeginOperationDelegate onBeginPerformServiceCommandDelegate;
        
        private EndOperationDelegate onEndPerformServiceCommandDelegate;
        
        private System.Threading.SendOrPostCallback onPerformServiceCommandCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetToolBarInfoDelegate;
        
        private EndOperationDelegate onEndGetToolBarInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetToolBarInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCubeDelegate;
        
        private EndOperationDelegate onEndUpdateCubeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCubeCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteQueryDelegate;
        
        private EndOperationDelegate onEndExecuteQueryDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteQueryCompletedDelegate;
        
        private BeginOperationDelegate onBeginRunExcelDelegate;
        
        private EndOperationDelegate onEndRunExcelDelegate;
        
        private System.Threading.SendOrPostCallback onRunExcelCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OlapWebServiceSoapClient() {
        }
        
        public OlapWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OlapWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OlapWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OlapWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetMetaDataCompletedEventArgs> GetMetaDataCompleted;
        
        public event System.EventHandler<GetMembersDataCompletedEventArgs> GetMembersDataCompleted;
        
        public event System.EventHandler<GetPivotDataCompletedEventArgs> GetPivotDataCompleted;
        
        public event System.EventHandler<PerformMemberActionCompletedEventArgs> PerformMemberActionCompleted;
        
        public event System.EventHandler<PerformStorageActionCompletedEventArgs> PerformStorageActionCompleted;
        
        public event System.EventHandler<PerformServiceCommandCompletedEventArgs> PerformServiceCommandCompleted;
        
        public event System.EventHandler<GetToolBarInfoCompletedEventArgs> GetToolBarInfoCompleted;
        
        public event System.EventHandler<UpdateCubeCompletedEventArgs> UpdateCubeCompleted;
        
        public event System.EventHandler<ExecuteQueryCompletedEventArgs> ExecuteQueryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RunExcelCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginGetMetaData(Ranet.AgOlap.OlapWebService.GetMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMetaData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMetaData(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.GetMetaDataRequest inValue = new Ranet.AgOlap.OlapWebService.GetMetaDataRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.GetMetaDataRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginGetMetaData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.GetMetaDataResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndGetMetaData(System.IAsyncResult result) {
            return base.Channel.EndGetMetaData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetMetaData(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.GetMetaDataResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndGetMetaData(result);
            return retVal.Body.GetMetaDataResult;
        }
        
        private System.IAsyncResult OnBeginGetMetaData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginGetMetaData(schema, callback, asyncState);
        }
        
        private object[] OnEndGetMetaData(System.IAsyncResult result) {
            string retVal = this.EndGetMetaData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMetaDataCompleted(object state) {
            if ((this.GetMetaDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMetaDataCompleted(this, new GetMetaDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMetaDataAsync(string schema) {
            this.GetMetaDataAsync(schema, null);
        }
        
        public void GetMetaDataAsync(string schema, object userState) {
            if ((this.onBeginGetMetaDataDelegate == null)) {
                this.onBeginGetMetaDataDelegate = new BeginOperationDelegate(this.OnBeginGetMetaData);
            }
            if ((this.onEndGetMetaDataDelegate == null)) {
                this.onEndGetMetaDataDelegate = new EndOperationDelegate(this.OnEndGetMetaData);
            }
            if ((this.onGetMetaDataCompletedDelegate == null)) {
                this.onGetMetaDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMetaDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMetaDataDelegate, new object[] {
                        schema}, this.onEndGetMetaDataDelegate, this.onGetMetaDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginGetMembersData(Ranet.AgOlap.OlapWebService.GetMembersDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMembersData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetMembersData(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.GetMembersDataRequest inValue = new Ranet.AgOlap.OlapWebService.GetMembersDataRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.GetMembersDataRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginGetMembersData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.GetMembersDataResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndGetMembersData(System.IAsyncResult result) {
            return base.Channel.EndGetMembersData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetMembersData(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.GetMembersDataResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndGetMembersData(result);
            return retVal.Body.GetMembersDataResult;
        }
        
        private System.IAsyncResult OnBeginGetMembersData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginGetMembersData(schema, callback, asyncState);
        }
        
        private object[] OnEndGetMembersData(System.IAsyncResult result) {
            string retVal = this.EndGetMembersData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMembersDataCompleted(object state) {
            if ((this.GetMembersDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMembersDataCompleted(this, new GetMembersDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMembersDataAsync(string schema) {
            this.GetMembersDataAsync(schema, null);
        }
        
        public void GetMembersDataAsync(string schema, object userState) {
            if ((this.onBeginGetMembersDataDelegate == null)) {
                this.onBeginGetMembersDataDelegate = new BeginOperationDelegate(this.OnBeginGetMembersData);
            }
            if ((this.onEndGetMembersDataDelegate == null)) {
                this.onEndGetMembersDataDelegate = new EndOperationDelegate(this.OnEndGetMembersData);
            }
            if ((this.onGetMembersDataCompletedDelegate == null)) {
                this.onGetMembersDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMembersDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetMembersDataDelegate, new object[] {
                        schema}, this.onEndGetMembersDataDelegate, this.onGetMembersDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginGetPivotData(Ranet.AgOlap.OlapWebService.GetPivotDataRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPivotData(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetPivotData(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.GetPivotDataRequest inValue = new Ranet.AgOlap.OlapWebService.GetPivotDataRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.GetPivotDataRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginGetPivotData(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.GetPivotDataResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndGetPivotData(System.IAsyncResult result) {
            return base.Channel.EndGetPivotData(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetPivotData(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.GetPivotDataResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndGetPivotData(result);
            return retVal.Body.GetPivotDataResult;
        }
        
        private System.IAsyncResult OnBeginGetPivotData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginGetPivotData(schema, callback, asyncState);
        }
        
        private object[] OnEndGetPivotData(System.IAsyncResult result) {
            string retVal = this.EndGetPivotData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPivotDataCompleted(object state) {
            if ((this.GetPivotDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPivotDataCompleted(this, new GetPivotDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPivotDataAsync(string schema) {
            this.GetPivotDataAsync(schema, null);
        }
        
        public void GetPivotDataAsync(string schema, object userState) {
            if ((this.onBeginGetPivotDataDelegate == null)) {
                this.onBeginGetPivotDataDelegate = new BeginOperationDelegate(this.OnBeginGetPivotData);
            }
            if ((this.onEndGetPivotDataDelegate == null)) {
                this.onEndGetPivotDataDelegate = new EndOperationDelegate(this.OnEndGetPivotData);
            }
            if ((this.onGetPivotDataCompletedDelegate == null)) {
                this.onGetPivotDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPivotDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetPivotDataDelegate, new object[] {
                        schema}, this.onEndGetPivotDataDelegate, this.onGetPivotDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginPerformMemberAction(Ranet.AgOlap.OlapWebService.PerformMemberActionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPerformMemberAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPerformMemberAction(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.PerformMemberActionRequest inValue = new Ranet.AgOlap.OlapWebService.PerformMemberActionRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.PerformMemberActionRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginPerformMemberAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.PerformMemberActionResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndPerformMemberAction(System.IAsyncResult result) {
            return base.Channel.EndPerformMemberAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndPerformMemberAction(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.PerformMemberActionResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndPerformMemberAction(result);
            return retVal.Body.PerformMemberActionResult;
        }
        
        private System.IAsyncResult OnBeginPerformMemberAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginPerformMemberAction(schema, callback, asyncState);
        }
        
        private object[] OnEndPerformMemberAction(System.IAsyncResult result) {
            string retVal = this.EndPerformMemberAction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPerformMemberActionCompleted(object state) {
            if ((this.PerformMemberActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PerformMemberActionCompleted(this, new PerformMemberActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PerformMemberActionAsync(string schema) {
            this.PerformMemberActionAsync(schema, null);
        }
        
        public void PerformMemberActionAsync(string schema, object userState) {
            if ((this.onBeginPerformMemberActionDelegate == null)) {
                this.onBeginPerformMemberActionDelegate = new BeginOperationDelegate(this.OnBeginPerformMemberAction);
            }
            if ((this.onEndPerformMemberActionDelegate == null)) {
                this.onEndPerformMemberActionDelegate = new EndOperationDelegate(this.OnEndPerformMemberAction);
            }
            if ((this.onPerformMemberActionCompletedDelegate == null)) {
                this.onPerformMemberActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPerformMemberActionCompleted);
            }
            base.InvokeAsync(this.onBeginPerformMemberActionDelegate, new object[] {
                        schema}, this.onEndPerformMemberActionDelegate, this.onPerformMemberActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginPerformStorageAction(Ranet.AgOlap.OlapWebService.PerformStorageActionRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPerformStorageAction(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPerformStorageAction(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.PerformStorageActionRequest inValue = new Ranet.AgOlap.OlapWebService.PerformStorageActionRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.PerformStorageActionRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginPerformStorageAction(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.PerformStorageActionResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndPerformStorageAction(System.IAsyncResult result) {
            return base.Channel.EndPerformStorageAction(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndPerformStorageAction(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.PerformStorageActionResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndPerformStorageAction(result);
            return retVal.Body.PerformStorageActionResult;
        }
        
        private System.IAsyncResult OnBeginPerformStorageAction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginPerformStorageAction(schema, callback, asyncState);
        }
        
        private object[] OnEndPerformStorageAction(System.IAsyncResult result) {
            string retVal = this.EndPerformStorageAction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPerformStorageActionCompleted(object state) {
            if ((this.PerformStorageActionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PerformStorageActionCompleted(this, new PerformStorageActionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PerformStorageActionAsync(string schema) {
            this.PerformStorageActionAsync(schema, null);
        }
        
        public void PerformStorageActionAsync(string schema, object userState) {
            if ((this.onBeginPerformStorageActionDelegate == null)) {
                this.onBeginPerformStorageActionDelegate = new BeginOperationDelegate(this.OnBeginPerformStorageAction);
            }
            if ((this.onEndPerformStorageActionDelegate == null)) {
                this.onEndPerformStorageActionDelegate = new EndOperationDelegate(this.OnEndPerformStorageAction);
            }
            if ((this.onPerformStorageActionCompletedDelegate == null)) {
                this.onPerformStorageActionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPerformStorageActionCompleted);
            }
            base.InvokeAsync(this.onBeginPerformStorageActionDelegate, new object[] {
                        schema}, this.onEndPerformStorageActionDelegate, this.onPerformStorageActionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginPerformServiceCommand(Ranet.AgOlap.OlapWebService.PerformServiceCommandRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPerformServiceCommand(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPerformServiceCommand(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.PerformServiceCommandRequest inValue = new Ranet.AgOlap.OlapWebService.PerformServiceCommandRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.PerformServiceCommandRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginPerformServiceCommand(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndPerformServiceCommand(System.IAsyncResult result) {
            return base.Channel.EndPerformServiceCommand(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndPerformServiceCommand(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndPerformServiceCommand(result);
            return retVal.Body.PerformServiceCommandResult;
        }
        
        private System.IAsyncResult OnBeginPerformServiceCommand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginPerformServiceCommand(schema, callback, asyncState);
        }
        
        private object[] OnEndPerformServiceCommand(System.IAsyncResult result) {
            string retVal = this.EndPerformServiceCommand(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPerformServiceCommandCompleted(object state) {
            if ((this.PerformServiceCommandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PerformServiceCommandCompleted(this, new PerformServiceCommandCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PerformServiceCommandAsync(string schema) {
            this.PerformServiceCommandAsync(schema, null);
        }
        
        public void PerformServiceCommandAsync(string schema, object userState) {
            if ((this.onBeginPerformServiceCommandDelegate == null)) {
                this.onBeginPerformServiceCommandDelegate = new BeginOperationDelegate(this.OnBeginPerformServiceCommand);
            }
            if ((this.onEndPerformServiceCommandDelegate == null)) {
                this.onEndPerformServiceCommandDelegate = new EndOperationDelegate(this.OnEndPerformServiceCommand);
            }
            if ((this.onPerformServiceCommandCompletedDelegate == null)) {
                this.onPerformServiceCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPerformServiceCommandCompleted);
            }
            base.InvokeAsync(this.onBeginPerformServiceCommandDelegate, new object[] {
                        schema}, this.onEndPerformServiceCommandDelegate, this.onPerformServiceCommandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginGetToolBarInfo(Ranet.AgOlap.OlapWebService.GetToolBarInfoRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetToolBarInfo(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginGetToolBarInfo(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.GetToolBarInfoRequest inValue = new Ranet.AgOlap.OlapWebService.GetToolBarInfoRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.GetToolBarInfoRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginGetToolBarInfo(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndGetToolBarInfo(System.IAsyncResult result) {
            return base.Channel.EndGetToolBarInfo(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndGetToolBarInfo(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndGetToolBarInfo(result);
            return retVal.Body.GetToolBarInfoResult;
        }
        
        private System.IAsyncResult OnBeginGetToolBarInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginGetToolBarInfo(schema, callback, asyncState);
        }
        
        private object[] OnEndGetToolBarInfo(System.IAsyncResult result) {
            string retVal = this.EndGetToolBarInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetToolBarInfoCompleted(object state) {
            if ((this.GetToolBarInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetToolBarInfoCompleted(this, new GetToolBarInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetToolBarInfoAsync(string schema) {
            this.GetToolBarInfoAsync(schema, null);
        }
        
        public void GetToolBarInfoAsync(string schema, object userState) {
            if ((this.onBeginGetToolBarInfoDelegate == null)) {
                this.onBeginGetToolBarInfoDelegate = new BeginOperationDelegate(this.OnBeginGetToolBarInfo);
            }
            if ((this.onEndGetToolBarInfoDelegate == null)) {
                this.onEndGetToolBarInfoDelegate = new EndOperationDelegate(this.OnEndGetToolBarInfo);
            }
            if ((this.onGetToolBarInfoCompletedDelegate == null)) {
                this.onGetToolBarInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetToolBarInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetToolBarInfoDelegate, new object[] {
                        schema}, this.onEndGetToolBarInfoDelegate, this.onGetToolBarInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginUpdateCube(Ranet.AgOlap.OlapWebService.UpdateCubeRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCube(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginUpdateCube(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.UpdateCubeRequest inValue = new Ranet.AgOlap.OlapWebService.UpdateCubeRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.UpdateCubeRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginUpdateCube(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.UpdateCubeResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndUpdateCube(System.IAsyncResult result) {
            return base.Channel.EndUpdateCube(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndUpdateCube(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.UpdateCubeResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndUpdateCube(result);
            return retVal.Body.UpdateCubeResult;
        }
        
        private System.IAsyncResult OnBeginUpdateCube(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginUpdateCube(schema, callback, asyncState);
        }
        
        private object[] OnEndUpdateCube(System.IAsyncResult result) {
            string retVal = this.EndUpdateCube(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCubeCompleted(object state) {
            if ((this.UpdateCubeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCubeCompleted(this, new UpdateCubeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCubeAsync(string schema) {
            this.UpdateCubeAsync(schema, null);
        }
        
        public void UpdateCubeAsync(string schema, object userState) {
            if ((this.onBeginUpdateCubeDelegate == null)) {
                this.onBeginUpdateCubeDelegate = new BeginOperationDelegate(this.OnBeginUpdateCube);
            }
            if ((this.onEndUpdateCubeDelegate == null)) {
                this.onEndUpdateCubeDelegate = new EndOperationDelegate(this.OnEndUpdateCube);
            }
            if ((this.onUpdateCubeCompletedDelegate == null)) {
                this.onUpdateCubeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCubeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCubeDelegate, new object[] {
                        schema}, this.onEndUpdateCubeDelegate, this.onUpdateCubeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginExecuteQuery(Ranet.AgOlap.OlapWebService.ExecuteQueryRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteQuery(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginExecuteQuery(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.ExecuteQueryRequest inValue = new Ranet.AgOlap.OlapWebService.ExecuteQueryRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.ExecuteQueryRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginExecuteQuery(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.ExecuteQueryResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndExecuteQuery(System.IAsyncResult result) {
            return base.Channel.EndExecuteQuery(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private string EndExecuteQuery(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.ExecuteQueryResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndExecuteQuery(result);
            return retVal.Body.ExecuteQueryResult;
        }
        
        private System.IAsyncResult OnBeginExecuteQuery(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginExecuteQuery(schema, callback, asyncState);
        }
        
        private object[] OnEndExecuteQuery(System.IAsyncResult result) {
            string retVal = this.EndExecuteQuery(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteQueryCompleted(object state) {
            if ((this.ExecuteQueryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteQueryCompleted(this, new ExecuteQueryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteQueryAsync(string schema) {
            this.ExecuteQueryAsync(schema, null);
        }
        
        public void ExecuteQueryAsync(string schema, object userState) {
            if ((this.onBeginExecuteQueryDelegate == null)) {
                this.onBeginExecuteQueryDelegate = new BeginOperationDelegate(this.OnBeginExecuteQuery);
            }
            if ((this.onEndExecuteQueryDelegate == null)) {
                this.onEndExecuteQueryDelegate = new EndOperationDelegate(this.OnEndExecuteQuery);
            }
            if ((this.onExecuteQueryCompletedDelegate == null)) {
                this.onExecuteQueryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteQueryCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteQueryDelegate, new object[] {
                        schema}, this.onEndExecuteQueryDelegate, this.onExecuteQueryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.BeginRunExcel(Ranet.AgOlap.OlapWebService.RunExcelRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRunExcel(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginRunExcel(string schema, System.AsyncCallback callback, object asyncState) {
            Ranet.AgOlap.OlapWebService.RunExcelRequest inValue = new Ranet.AgOlap.OlapWebService.RunExcelRequest();
            inValue.Body = new Ranet.AgOlap.OlapWebService.RunExcelRequestBody();
            inValue.Body.schema = schema;
            return ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).BeginRunExcel(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Ranet.AgOlap.OlapWebService.RunExcelResponse Ranet.AgOlap.OlapWebService.OlapWebServiceSoap.EndRunExcel(System.IAsyncResult result) {
            return base.Channel.EndRunExcel(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private void EndRunExcel(System.IAsyncResult result) {
            Ranet.AgOlap.OlapWebService.RunExcelResponse retVal = ((Ranet.AgOlap.OlapWebService.OlapWebServiceSoap)(this)).EndRunExcel(result);
        }
        
        private System.IAsyncResult OnBeginRunExcel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string schema = ((string)(inValues[0]));
            return this.BeginRunExcel(schema, callback, asyncState);
        }
        
        private object[] OnEndRunExcel(System.IAsyncResult result) {
            this.EndRunExcel(result);
            return null;
        }
        
        private void OnRunExcelCompleted(object state) {
            if ((this.RunExcelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RunExcelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RunExcelAsync(string schema) {
            this.RunExcelAsync(schema, null);
        }
        
        public void RunExcelAsync(string schema, object userState) {
            if ((this.onBeginRunExcelDelegate == null)) {
                this.onBeginRunExcelDelegate = new BeginOperationDelegate(this.OnBeginRunExcel);
            }
            if ((this.onEndRunExcelDelegate == null)) {
                this.onEndRunExcelDelegate = new EndOperationDelegate(this.OnEndRunExcel);
            }
            if ((this.onRunExcelCompletedDelegate == null)) {
                this.onRunExcelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRunExcelCompleted);
            }
            base.InvokeAsync(this.onBeginRunExcelDelegate, new object[] {
                        schema}, this.onEndRunExcelDelegate, this.onRunExcelCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Ranet.AgOlap.OlapWebService.OlapWebServiceSoap CreateChannel() {
            return new OlapWebServiceSoapClientChannel(this);
        }
        
        private class OlapWebServiceSoapClientChannel : ChannelBase<Ranet.AgOlap.OlapWebService.OlapWebServiceSoap>, Ranet.AgOlap.OlapWebService.OlapWebServiceSoap {
            
            public OlapWebServiceSoapClientChannel(System.ServiceModel.ClientBase<Ranet.AgOlap.OlapWebService.OlapWebServiceSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetMetaData(Ranet.AgOlap.OlapWebService.GetMetaDataRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMetaData", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.GetMetaDataResponse EndGetMetaData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.GetMetaDataResponse _result = ((Ranet.AgOlap.OlapWebService.GetMetaDataResponse)(base.EndInvoke("GetMetaData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMembersData(Ranet.AgOlap.OlapWebService.GetMembersDataRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetMembersData", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.GetMembersDataResponse EndGetMembersData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.GetMembersDataResponse _result = ((Ranet.AgOlap.OlapWebService.GetMembersDataResponse)(base.EndInvoke("GetMembersData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPivotData(Ranet.AgOlap.OlapWebService.GetPivotDataRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetPivotData", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.GetPivotDataResponse EndGetPivotData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.GetPivotDataResponse _result = ((Ranet.AgOlap.OlapWebService.GetPivotDataResponse)(base.EndInvoke("GetPivotData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPerformMemberAction(Ranet.AgOlap.OlapWebService.PerformMemberActionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PerformMemberAction", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.PerformMemberActionResponse EndPerformMemberAction(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.PerformMemberActionResponse _result = ((Ranet.AgOlap.OlapWebService.PerformMemberActionResponse)(base.EndInvoke("PerformMemberAction", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPerformStorageAction(Ranet.AgOlap.OlapWebService.PerformStorageActionRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PerformStorageAction", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.PerformStorageActionResponse EndPerformStorageAction(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.PerformStorageActionResponse _result = ((Ranet.AgOlap.OlapWebService.PerformStorageActionResponse)(base.EndInvoke("PerformStorageAction", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPerformServiceCommand(Ranet.AgOlap.OlapWebService.PerformServiceCommandRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PerformServiceCommand", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse EndPerformServiceCommand(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse _result = ((Ranet.AgOlap.OlapWebService.PerformServiceCommandResponse)(base.EndInvoke("PerformServiceCommand", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetToolBarInfo(Ranet.AgOlap.OlapWebService.GetToolBarInfoRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetToolBarInfo", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse EndGetToolBarInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse _result = ((Ranet.AgOlap.OlapWebService.GetToolBarInfoResponse)(base.EndInvoke("GetToolBarInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateCube(Ranet.AgOlap.OlapWebService.UpdateCubeRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("UpdateCube", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.UpdateCubeResponse EndUpdateCube(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.UpdateCubeResponse _result = ((Ranet.AgOlap.OlapWebService.UpdateCubeResponse)(base.EndInvoke("UpdateCube", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteQuery(Ranet.AgOlap.OlapWebService.ExecuteQueryRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteQuery", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.ExecuteQueryResponse EndExecuteQuery(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.ExecuteQueryResponse _result = ((Ranet.AgOlap.OlapWebService.ExecuteQueryResponse)(base.EndInvoke("ExecuteQuery", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRunExcel(Ranet.AgOlap.OlapWebService.RunExcelRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("RunExcel", _args, callback, asyncState);
                return _result;
            }
            
            public Ranet.AgOlap.OlapWebService.RunExcelResponse EndRunExcel(System.IAsyncResult result) {
                object[] _args = new object[0];
                Ranet.AgOlap.OlapWebService.RunExcelResponse _result = ((Ranet.AgOlap.OlapWebService.RunExcelResponse)(base.EndInvoke("RunExcel", _args, result)));
                return _result;
            }
        }
    }
}
